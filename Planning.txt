a : 1, 1, 0
b : 1, 2, 0
c : 0, 0, 0

e(t, r) : a + t * b + r * c
e2(x, a1, b1, c1) : a1 * x.1 + b1 * x.2 + c1 * x.3 = 1

g(s) : a + s * b

f(t, r, s) : e = g         ->  f(t, r, s) : a + t * b + r * c = a + s * b

f(1, 1, 3).s

h : e2(g(_), 0, 3, 4).s    -> 0 * x.1 + 2 * x.2 + 3 * x.3 = 1 -> 0 * (a + s * b).1 + 2 * (a + s * b).2 + 3 * (a + s * b).3 = 1 -> 0 * (1 + s * 1) + 2 * (1 + s * 2) + 3 * (0 + s * 0) = 1 -> 3

g(3) 
-> a.1 + 3 * b.1 -> 1 + 3 * 1 -> 4
-> a.2 + 3 * b.2 -> 1 + 3 * 2 -> 7
-> a.3 + 3 * b.3 -> 0 + 3 * 0 -> 0

d : len(t) 

a : 1, 1
b : 2, 2

g<t> : a + t * b






Number a : term, term, term -> []float --> termPart
Variable b --> termPart
Operator + --> termPart
Function func<x> : x + 2 --> termPart

term -> []termParts

termPart.Calc(term, index)term

Number.Calc(){
    return {Number}
}

Variable.Calc(){
    return {Variable}
}

Operator.Calc(){
    retrun {Number + Number}
}

Function.Calc(){
    return term
}


rules:

alle Variablen zur Rechten Seite
alle Zahlen zu linken Seite

