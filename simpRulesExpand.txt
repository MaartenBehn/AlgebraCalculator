all_0 + var_1 = all_0 + 1 * var_1

// Fix wrong Brace order
all_0i + ( all_1i + all_2i ) = all_0i + all_1i + all_2i
all_0i * ( all_1i * all_2i ) = all_0i * all_1i * all_2i

// Remove Division
all_0 / vec_1 = 1 / vec_1 * all_0
all_0 / all_1 = all_0 * all_1 pow -1

//Remove Subtraction
all_0 - all_1 = all_0 + -1 * all_1

// Brackte Rules:
- All the same
( all_0 + all_0 ) * ( all_0 + all_0 ) = 4 * all_0 pow 2

// - Two
( all_0 + all_1 ) pow 2 = ( all_0 + all_1 ) * ( all_0 + all_1 )
( all_0 - all_1 ) pow 2 = ( all_0 - all_1 ) * ( all_0 - all_1 )

( all_0i + all_1i ) * ( all_0i + all_1i ) = all_0 pow 2 + all_1 pow 2 + 2 * all_0 * all_1
( all_0i + all_1i ) * ( all_1i + all_0i ) = all_0 pow 2 + all_1 pow 2 + 2 * all_0 * all_1

( all_0i + all_1i ) * ( all_0i - all_1i ) = all_0 pow 2 - all_1 pow 2
( all_0i + all_1i ) * ( all_1i - all_0i ) = all_1 pow 2 - all_0 pow 2

( all_0i - all_1i ) * ( all_0i + all_1i ) = all_0 pow 2 - all_1 pow 2
( all_0i - all_1i ) * ( all_1i + all_0i ) = all_1 pow 2 - all_0 pow 2

( all_0i - all_1i ) * ( all_0i - all_1i ) = all_0 pow 2 + all_1 pow 2 - 2 * all_0 * all_1
( all_0i - all_1i ) * ( all_1i - all_0i ) = all_0 pow 2 + all_1 pow 2 - 2 * all_0 * all_1

// - Four
( all_0i + all_1i ) * ( all_2i + all_3i ) = all_0 * all_2 + all_1 * all_2 + all_0 * all_3 + all_1 * all_3
( all_0i + all_1i ) * ( all_2i - all_3i ) = all_0 * all_2 + all_1 * all_2 - all_0 * all_3 - all_1 * all_3
( all_0i - all_1i ) * ( all_2i + all_3i ) = all_0 * all_2 - all_1 * all_2 + all_0 * all_3 - all_1 * all_3
( all_0i - all_1i ) * ( all_2i - all_3i ) = all_0 * all_2 - all_1 * all_2 - all_0 * all_3 - all_1 * all_3

// - Three
all_0i * ( all_1i + all_2i ) = all_0 * all_1 + all_0 * all_2
all_0i * ( all_1i - all_2i ) = all_0 * all_1 - all_0 * all_2
( all_0i + all_1i ) * all_2i = all_2 * all_0 + all_2 * all_1
( all_0i - all_1i ) * all_2i = all_2 * all_0 - all_2 * all_1

// Delete Rules:
0 + all_0 = all_0
0 * all_0 = 0
all_0 - all_0 = 0
all_0 / 1 = all_0
